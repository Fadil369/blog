name: Deploy Nuxt.js Blog to Cloudflare Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  deployments: write
  attestations: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Pages
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # No cache until package-lock.json exists

      - name: Install dependencies
        run: |
          if [ -f "package.json" ]; then
            echo "üì¶ Installing dependencies..."
            npm ci --prefer-offline --no-audit --no-fund
          else
            echo "‚ùå No package.json found. Creating basic Nuxt.js project..."
            npm init -y
            npm install nuxt@latest
            
            # Create basic nuxt.config.ts for BrainSAIT healthcare blog
            cat > nuxt.config.ts << 'EOF'
export default defineNuxtConfig({
  devtools: { enabled: true },
  nitro: {
    preset: 'cloudflare-pages'
  },
  app: {
    head: {
      title: 'BrainSAIT Healthcare Analytics Blog',
      meta: [
        { charset: 'utf-8' },
        { name: 'viewport', content: 'width=device-width, initial-scale=1' },
        { name: 'description', content: 'Healthcare data analysis and insurance sector insights by BrainSAIT' },
        { name: 'keywords', content: 'healthcare, insurance, data analysis, Swift, Python, FastAPI' }
      ]
    }
  }
})
EOF
            
            # Create basic app.vue with BrainSAIT branding
            cat > app.vue << 'EOF'
<template>
  <div class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
    <div class="container mx-auto px-4 py-8">
      <header class="text-center mb-12">
        <h1 class="text-4xl font-bold text-indigo-800 mb-4">
          üè• BrainSAIT Healthcare Analytics
        </h1>
        <p class="text-xl text-gray-600 max-w-2xl mx-auto">
          Advanced healthcare data analysis and insurance sector insights
        </p>
      </header>
      
      <main class="grid md:grid-cols-2 gap-8">
        <div class="bg-white rounded-lg shadow-lg p-6">
          <h2 class="text-2xl font-semibold text-indigo-700 mb-4">
            üìä Data Analysis Services
          </h2>
          <ul class="space-y-2 text-gray-700">
            <li>‚Ä¢ Insurance claims analysis</li>
            <li>‚Ä¢ Healthcare trend prediction</li>
            <li>‚Ä¢ Risk assessment modeling</li>
            <li>‚Ä¢ Automated reporting systems</li>
          </ul>
        </div>
        
        <div class="bg-white rounded-lg shadow-lg p-6">
          <h2 class="text-2xl font-semibold text-indigo-700 mb-4">
            üõ†Ô∏è Technology Stack
          </h2>
          <ul class="space-y-2 text-gray-700">
            <li>‚Ä¢ Swift (iOS/macOS development)</li>
            <li>‚Ä¢ Python (Backend with FastAPI)</li>
            <li>‚Ä¢ Docker containerization</li>
            <li>‚Ä¢ Cloudflare infrastructure</li>
          </ul>
        </div>
      </main>
      
      <footer class="text-center mt-12 text-gray-500">
        <p>¬© 2025 BrainSAIT - Healthcare Data Intelligence</p>
      </footer>
    </div>
  </div>
</template>

<style>
@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';
</style>
EOF
            
            # Update package.json scripts
            npm pkg set scripts.generate="nuxt generate"
            npm pkg set scripts.build="nuxt build"
            npm pkg set scripts.dev="nuxt dev"
            npm pkg set scripts.preview="nuxt preview"
            
            # Add Tailwind CSS for styling
            npm install -D tailwindcss postcss autoprefixer
            npx tailwindcss init -p
          fi

      - name: Build static site
        run: |
          echo "üî® Building BrainSAIT healthcare blog..."
          npm run generate
          
          # Verify build output
          if [ -d "dist" ] || [ -d ".output/public" ]; then
            echo "‚úÖ Build completed successfully"
            echo "üìÅ Build artifacts ready for deployment"
          else
            echo "‚ùå Build failed - no output directory found"
            exit 1
          fi
        env:
          NODE_ENV: production

      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v2.4.0
        with:
          subject-path: |
            dist/**
            .output/public/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ${{ steps.build-check.outputs.directory || 'dist' }} --project-name=${{ secrets.CLOUDFLARE_PROJECT_NAME || 'brainsait-blog' }} --compatibility-date=2025-07-03
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Output deployment info
        run: |
          echo "üéâ BrainSAIT Healthcare Blog Deployed Successfully!"
          echo "üöÄ Live at: https://${{ secrets.CLOUDFLARE_PROJECT_NAME || 'brainsait-blog' }}.pages.dev"
          echo "üîí Build provenance attestation: ‚úÖ Verified"
          echo "üè• Ready for healthcare data analysis content!"
          echo ""
          echo "üìã Deployment Summary:"
          echo "   ‚Ä¢ Build time: $(date -u)"
          echo "   ‚Ä¢ Node.js version: $(node --version)"
          echo "   ‚Ä¢ Deployment target: Cloudflare Pages"
          echo "   ‚Ä¢ Security: Build provenance attested"
          echo "   ‚Ä¢ Industry focus: Healthcare & Insurance"
